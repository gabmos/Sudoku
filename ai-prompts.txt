# AI Prompts Used in Sudoku Validator Development
## Introduction to Racket & Functional Programming Assignment

**Note: AI assistance was used for approximately 20% of the development work, primarily for specific syntax questions and debugging assistance.**

### Initial Learning (Minimal AI Usage)

**Prompt 1: "I'm new to Racket syntax. How do I read input from standard input? I need to read 9 lines of 9 digits each."**

**Prompt 2: "What's the difference between 'andmap' and 'map' in Racket? I'm trying to validate rows in my Sudoku board."**

### Specific Technical Questions (Limited AI Usage)

**Prompt 3: "How do I extract columns from a 2D list in Racket? I have a 9x9 board and need to check each column."**

**Prompt 4: "I'm getting an error with my subgrid extraction. Can you help me debug this specific function?"**

**Prompt 5: "How do I use 'for*/list' to create nested loops in Racket? I need to iterate through 3x3 subgrids."**

### Debugging Assistance (Occasional AI Usage)

**Prompt 6: "My validation function is returning unexpected results. Can you help me trace through this specific case?"**

**Prompt 7: "I'm having trouble with the input format. How do I handle the blank line and asterisk (*) in my main function?"**

**Prompt 8: "How do I write good comments in Racket? What's the standard format for documenting functions?"**

### Final Polish (Minimal AI Usage)

**Prompt 9: "Can you review my error messages and suggest improvements? I want them to be more user-friendly."**

**Prompt 10: "How do I structure the module+ main section properly for command line execution?"**

---

## Notes on AI Interaction

### Limited but Effective Use:
- AI was primarily used for specific syntax questions and debugging
- Most of the core logic and algorithm design was done independently
- AI helped with Racket-specific constructs that were unfamiliar
- Used AI for targeted debugging rather than code generation

### What I Did Independently:
- Designed the overall validation algorithm
- Implemented the core logic for row, column, and subgrid validation
- Created the error detection and reporting system
- Structured the main program flow
- Wrote comprehensive documentation and comments
- Created test cases and examples

### AI's Role:
- Provided quick answers to Racket syntax questions
- Helped debug specific technical issues
- Explained unfamiliar functional programming constructs
- Assisted with input/output handling specifics
